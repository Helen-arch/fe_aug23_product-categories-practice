{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","categoryData","user","usersFromServer","userData","users","App","useState","filterByOwner","setFilterByOwner","filterByCategories","setFilterByCategories","query","setQuery","filteredProducts","productsData","owner","selectedCategories","resultData","filter","toLowerCase","startsWith","length","includes","getPreparedProducts","className","href","cn","onClick","value","type","placeholder","onChange","event","target","activeClass","clickedTitle","existed","userName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff73348f.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(categoryData => categoryData.id === product.categoryId);\n\n  const user = usersFromServer\n    .find(userData => userData.id === category.ownerId);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst users = [{ id: 0, name: 'All' }, ...usersFromServer];\n\nconst getPreparedProducts = (\n  productsData,\n  owner,\n  query,\n  selectedCategories,\n) => {\n  let resultData = [...productsData];\n\n  if (owner) {\n    if (owner === 'All') {\n      resultData = [...products];\n    } else {\n      resultData = resultData.filter(({ user }) => user.name === owner);\n    }\n  }\n\n  if (query) {\n    resultData = resultData\n      .filter(({ name }) => name.toLowerCase().startsWith(query.toLowerCase()));\n  }\n\n  if (selectedCategories.length > 0) {\n    if (selectedCategories[selectedCategories.length - 1] === 'All') {\n      if (owner && owner === 'All') {\n        resultData = [...products];\n      } else {\n        resultData = [...resultData];\n      }\n    } else {\n      resultData = resultData\n        .filter(({ category }) => selectedCategories.includes(category.title));\n    }\n  }\n\n  return resultData;\n};\n\nexport const App = () => {\n  const [filterByOwner, setFilterByOwner] = useState('All');\n  const [filterByCategories, setFilterByCategories] = useState(['All']);\n  const [query, setQuery] = useState('');\n\n  const filteredProducts = getPreparedProducts(\n    products,\n    filterByOwner,\n    query,\n    filterByCategories,\n  );\n\n  const handleSelect = (clickedTitle) => {\n    if (filterByCategories.includes(clickedTitle)) {\n      return [\n        'All',\n        ...filterByCategories\n          .filter(existed => existed !== clickedTitle),\n      ];\n    }\n\n    return [\n      ...filterByCategories.filter(existed => existed !== 'All'),\n      clickedTitle,\n    ];\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              {users.map((user) => {\n                const {\n                  id,\n                  name,\n                } = user;\n\n                return (\n                  <a\n                    key={id}\n                    data-cy={id === 0 ? 'FilterAllUsers' : 'FilterUser'}\n                    href=\"#/\"\n                    className={cn({\n                      'is-active': name === filterByOwner,\n                    })}\n                    onClick={() => setFilterByOwner(name)}\n                  >\n                    {name}\n                  </a>\n                );\n              })}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  value={query}\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                data-cy=\"AllCategories\"\n                className={`button is-success mr-6 ${filterByCategories.includes('All') ? '' : 'is-outlined'}`}\n                href=\"#/\"\n                onClick={() => {\n                  setFilterByCategories(['All']);\n                }}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map((category) => {\n                const {\n                  id,\n                  title,\n                } = category;\n\n                const activeClass = filterByCategories.includes(title)\n                  ? 'is-info'\n                  : '';\n\n                return (\n                  <a\n                    key={id}\n                    data-cy=\"Category\"\n                    className={`button mr-2 my-1 ${activeClass}`}\n                    href=\"#/\"\n                    onClick={() => setFilterByCategories(handleSelect(title))}\n                  >\n                    {title}\n                  </a>\n                );\n              })}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setFilterByOwner('All');\n                  setQuery('');\n                  setFilterByCategories(['All']);\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {filteredProducts.length === 0\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )\n            : (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className=\"fas fa-sort-down\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {filteredProducts.map((product) => {\n                    const {\n                      id,\n                      name,\n                      category: { icon, title },\n                      user: { name: userName, sex },\n                    } = product;\n\n                    return (\n                      <tr data-cy=\"Product\" key={id}>\n                        <td\n                          className=\"has-text-weight-bold\"\n                          data-cy=\"ProductId\"\n                        >\n                          {id}\n                        </td>\n\n                        <td data-cy=\"ProductName\">{name}</td>\n                        <td data-cy=\"ProductCategory\">\n                          {`${icon} - ${title}`}\n                        </td>\n\n                        <td\n                          data-cy=\"ProductUser\"\n                          className={cn({\n                            'has-text-link': sex === 'm',\n                            'has-text-danger': sex === 'f',\n                          })}\n                        >\n                          {userName}\n                        </td>\n                      </tr>\n                    );\n                  })}\n\n                  {/* <tr data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      1\n                    </td>\n\n                    <td data-cy=\"ProductName\">Milk</td>\n                    <td data-cy=\"ProductCategory\">🍺 - Drinks</td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className=\"has-text-link\"\n                    >\n                      Max\n                    </td>\n                  </tr>\n\n                  <tr data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      2\n                    </td>\n\n                    <td data-cy=\"ProductName\">Bread</td>\n                    <td data-cy=\"ProductCategory\">🍞 - Grocery</td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className=\"has-text-danger\"\n                    >\n                      Anna\n                    </td>\n                  </tr>\n\n                  <tr data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      3\n                    </td>\n\n                    <td data-cy=\"ProductName\">iPhone</td>\n                    <td data-cy=\"ProductCategory\">💻 - Electronics</td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className=\"has-text-link\"\n                    >\n                      Roma\n                    </td>\n                  </tr> */}\n                </tbody>\n              </table>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}